<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="757px" preserveAspectRatio="none" style="width:439px;height:757px;" version="1.1" viewBox="0 0 439 757" width="439px" zoomAndPan="magnify"><defs><filter height="300%" id="f1576kf5qvxfog" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[f8dbe852789f6b924c8219364c6d35e7]
class Weather--><rect codeLine="4" fill="#FEFECE" filter="url(#f1576kf5qvxfog)" height="186.3594" id="Weather" style="stroke: #A80036; stroke-width: 1.5;" width="291" x="70.5" y="7"/><ellipse cx="188.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M191.5156,18.875 Q191.6719,18.6563 191.8594,18.5469 Q192.0469,18.4375 192.2656,18.4375 Q192.6406,18.4375 192.875,18.6953 Q193.1094,18.9531 193.1094,19.5625 L193.1094,21.0156 Q193.1094,21.625 192.875,21.8906 Q192.6406,22.1563 192.2656,22.1563 Q191.9219,22.1563 191.7188,21.9531 Q191.5156,21.7656 191.4063,21.25 Q191.3594,20.8906 191.1719,20.7031 Q190.8438,20.3281 190.2344,20.1094 Q189.625,19.8906 189,19.8906 Q188.2344,19.8906 187.6016,20.2188 Q186.9688,20.5469 186.4766,21.2969 Q185.9844,22.0469 185.9844,23.0781 L185.9844,24.1719 Q185.9844,25.4063 186.875,26.2266 Q187.7656,27.0469 189.3594,27.0469 Q190.2969,27.0469 190.9531,26.7969 Q191.3438,26.6406 191.7656,26.2031 Q192.0313,25.9375 192.1797,25.8594 Q192.3281,25.7813 192.5313,25.7813 Q192.8594,25.7813 193.1172,26.0391 Q193.375,26.2969 193.375,26.6406 Q193.375,26.9844 193.0313,27.3906 Q192.5313,27.9688 191.7344,28.2969 Q190.6563,28.75 189.3594,28.75 Q187.8438,28.75 186.6406,28.125 Q185.6563,27.625 184.9688,26.5547 Q184.2813,25.4844 184.2813,24.2031 L184.2813,23.0469 Q184.2813,21.7188 184.8984,20.5703 Q185.5156,19.4219 186.6094,18.8047 Q187.7031,18.1875 188.9375,18.1875 Q189.6719,18.1875 190.3203,18.3516 Q190.9688,18.5156 191.5156,18.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="209.25" y="27.9102">Weather</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="71.5" x2="360.5" y1="39" y2="39"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="78.5" y="47"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="90.5" y="54.4189">_apiKey : String</text><polygon fill="none" points="81.5,58.8359,85.5,62.8359,81.5,66.8359,77.5,62.8359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="90.5" y="68.2549">_err : String</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="78.5" y="74.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="90.5" y="82.0908">_wifiClient : WiFiClient*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="78.5" y="88.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="90.5" y="95.9268">_server : const char*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="71.5" x2="360.5" y1="102.3438" y2="102.3438"/><ellipse cx="81.5" cy="113.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="90.5" y="117.7627">Weather(String apiKey, WiFiClient* wifiClient)</text><ellipse cx="81.5" cy="127.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="90.5" y="131.5986">err() : String</text><ellipse cx="81.5" cy="141.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="90.5" y="145.4346">get(String city, unsigned npredictions) : String</text><ellipse cx="81.5" cy="154.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="90.5" y="159.2705">getApiKey() : String</text><polygon fill="#FFFF44" points="81.5,163.6875,85.5,167.6875,81.5,171.6875,77.5,167.6875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="90.5" y="173.1064">httpJsonRequest(const String url, String&amp; output) : bool</text><ellipse cx="81.5" cy="182.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="90.5" y="186.9424">setApiKey(String apiKey) : void</text><!--MD5=[3b2acc2ed8dcb6172012578eb3ffe6c7]
class WeatherMQTT--><rect codeLine="18" fill="#FEFECE" filter="url(#f1576kf5qvxfog)" height="490.75" id="WeatherMQTT" style="stroke: #A80036; stroke-width: 1.5;" width="418" x="7" y="253"/><ellipse cx="107.25" cy="269" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M110.0156,264.875 Q110.1719,264.6563 110.3594,264.5469 Q110.5469,264.4375 110.7656,264.4375 Q111.1406,264.4375 111.375,264.6953 Q111.6094,264.9531 111.6094,265.5625 L111.6094,267.0156 Q111.6094,267.625 111.375,267.8906 Q111.1406,268.1563 110.7656,268.1563 Q110.4219,268.1563 110.2188,267.9531 Q110.0156,267.7656 109.9063,267.25 Q109.8594,266.8906 109.6719,266.7031 Q109.3438,266.3281 108.7344,266.1094 Q108.125,265.8906 107.5,265.8906 Q106.7344,265.8906 106.1016,266.2188 Q105.4688,266.5469 104.9766,267.2969 Q104.4844,268.0469 104.4844,269.0781 L104.4844,270.1719 Q104.4844,271.4063 105.375,272.2266 Q106.2656,273.0469 107.8594,273.0469 Q108.7969,273.0469 109.4531,272.7969 Q109.8438,272.6406 110.2656,272.2031 Q110.5313,271.9375 110.6797,271.8594 Q110.8281,271.7813 111.0313,271.7813 Q111.3594,271.7813 111.6172,272.0391 Q111.875,272.2969 111.875,272.6406 Q111.875,272.9844 111.5313,273.3906 Q111.0313,273.9688 110.2344,274.2969 Q109.1563,274.75 107.8594,274.75 Q106.3438,274.75 105.1406,274.125 Q104.1563,273.625 103.4688,272.5547 Q102.7813,271.4844 102.7813,270.2031 L102.7813,269.0469 Q102.7813,267.7188 103.3984,266.5703 Q104.0156,265.4219 105.1094,264.8047 Q106.2031,264.1875 107.4375,264.1875 Q108.1719,264.1875 108.8203,264.3516 Q109.4688,264.5156 110.0156,264.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="127.75" y="273.9102">WeatherMQTT</text><rect fill="#FFFFFF" height="17.0938" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="129" x="299" y="250"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="127" x="300" y="263.457">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="424" y1="285" y2="285"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="293"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="27" y="300.4189">_city : String</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="306.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="27" y="314.2549">_mqttTopic : String</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="320.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="27" y="328.0908">_mqttClient : T*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="334.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="27" y="341.9268">_wifiClient : WiFiClient*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="348.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="27" y="355.7627">_buffSizeInc : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="362.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="27" y="369.5986">_minMqttBuff : const uint16_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="376.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="27" y="383.4346">_eepromAdd : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="389.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="27" y="397.2705">_npredictions : unsigned</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="403.6875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="27" y="411.1064">_lastConnectionTime : unsigned long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="417.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="27" y="424.9424">_period : unsigned long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="424" y1="431.3594" y2="431.3594"/><ellipse cx="18" cy="442.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="27" y="446.7783">WeatherMQTT(String apiKey, WiFiClient* wifiClient, T* mqttClient, String mqttTopic)</text><ellipse cx="18" cy="456.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="27" y="460.6143">getCity() : String</text><ellipse cx="18" cy="470.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="27" y="474.4502">getMqttTopic() : String</text><ellipse cx="18" cy="483.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="27" y="488.2861">callback(String topic, String payload) : bool</text><ellipse cx="18" cy="497.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="27" y="502.1221">callback(char* topic, byte* payload, unsigned int length) : bool</text><ellipse cx="18" cy="511.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="27" y="515.958">load(int const address) : bool</text><ellipse cx="18" cy="525.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="27" y="529.7939">load() : bool</text><ellipse cx="18" cy="539.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="27" y="543.6299">resubscribe() : bool</text><ellipse cx="18" cy="553.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="27" y="557.4658">run() : bool</text><ellipse cx="18" cy="566.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="27" y="571.3018">subscribe() : bool</text><ellipse cx="18" cy="580.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="27" y="585.1377">unsubscribe() : bool</text><ellipse cx="18" cy="594.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="27" y="598.9736">getEEPROMAddress() : int</text><ellipse cx="18" cy="608.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="27" y="612.8096">save(int const address) : int</text><ellipse cx="18" cy="622.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="27" y="626.6455">save() : int</text><ellipse cx="18" cy="636.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="27" y="640.4814">minBufferSize() : uint16_t</text><ellipse cx="18" cy="649.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="27" y="654.3174">getnPredictions() : unsigned</text><ellipse cx="18" cy="663.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="27" y="668.1533">getPeriod() : unsigned long</text><ellipse cx="18" cy="677.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="27" y="681.9893">setCity(String city) : void</text><ellipse cx="18" cy="691.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="27" y="695.8252">setEEPROMAddress(int add) : void</text><ellipse cx="18" cy="705.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="27" y="709.6611">setMqttTopic(String topic) : void</text><ellipse cx="18" cy="719.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="27" y="723.4971">setPeriod(unsigned long period) : void</text><ellipse cx="18" cy="732.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="27" y="737.333">setnPredictions(unsigned val) : void</text><!--MD5=[2cdc363080911b69685e9ac9eeab0786]
reverse link Weather to WeatherMQTT--><path codeLine="71" d="M216,213.24 C216,225.89 216,239.12 216,252.66 " fill="none" id="Weather-backto-WeatherMQTT" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="209,213.21,216,193.21,223,213.21,209,213.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5963d7bcc505203bece9d3b410a15f73]
@startuml WeatherClient

/' Objects '/

class Weather {
	+Weather(String apiKey, WiFiClient* wifiClient)
	-_apiKey : String
	#_err : String
	+err() : String
	+get(String city, unsigned npredictions) : String
	+getApiKey() : String
	-_wifiClient : WiFiClient*
	#httpJsonRequest(const String url, String& output) : bool
	-_server : const char*
	+setApiKey(String apiKey) : void
}


class WeatherMQTT <template<typename T>> {
	+WeatherMQTT(String apiKey, WiFiClient* wifiClient, T* mqttClient, String mqttTopic)
	-_city : String
	-_mqttTopic : String
	+getCity() : String
	+getMqttTopic() : String
	-_mqttClient : T*
	-_wifiClient : WiFiClient*
	+callback(String topic, String payload) : bool
	+callback(char* topic, byte* payload, unsigned int length) : bool
	+load(int const address) : bool
	+load() : bool
	+resubscribe() : bool
	+run() : bool
	+subscribe() : bool
	+unsubscribe() : bool
	-_buffSizeInc : const uint16_t
	-_minMqttBuff : const uint16_t
	-_eepromAdd : int
	+getEEPROMAddress() : int
	+save(int const address) : int
	+save() : int
	+minBufferSize() : uint16_t
	-_npredictions : unsigned
	+getnPredictions() : unsigned
	-_lastConnectionTime : unsigned long
	-_period : unsigned long
	+getPeriod() : unsigned long
	+setCity(String city) : void
	+setEEPROMAddress(int add) : void
	+setMqttTopic(String topic) : void
	+setPeriod(unsigned long period) : void
	+setnPredictions(unsigned val) : void
}


' namespace WeatherMQTT {
' 	class args_t {
' 		+apiKey : char
' 		+city : char
' 		+mqttTopic : char
' 		+npredictions : unsigned
' 		+lastConnectionTime : unsigned long
' 		+period : unsigned long
' 	}
' }





/' Inheritance relationships '/

.Weather <|- - .WeatherMQTT

show WeatherMQTT members
show <<Serializable>> fields





/' Aggregation relationships '/




@enduml

@startuml WeatherClient


class Weather {
	+Weather(String apiKey, WiFiClient* wifiClient)
	-_apiKey : String
	#_err : String
	+err() : String
	+get(String city, unsigned npredictions) : String
	+getApiKey() : String
	-_wifiClient : WiFiClient*
	#httpJsonRequest(const String url, String& output) : bool
	-_server : const char*
	+setApiKey(String apiKey) : void
}


class WeatherMQTT <template<typename T>> {
	+WeatherMQTT(String apiKey, WiFiClient* wifiClient, T* mqttClient, String mqttTopic)
	-_city : String
	-_mqttTopic : String
	+getCity() : String
	+getMqttTopic() : String
	-_mqttClient : T*
	-_wifiClient : WiFiClient*
	+callback(String topic, String payload) : bool
	+callback(char* topic, byte* payload, unsigned int length) : bool
	+load(int const address) : bool
	+load() : bool
	+resubscribe() : bool
	+run() : bool
	+subscribe() : bool
	+unsubscribe() : bool
	-_buffSizeInc : const uint16_t
	-_minMqttBuff : const uint16_t
	-_eepromAdd : int
	+getEEPROMAddress() : int
	+save(int const address) : int
	+save() : int
	+minBufferSize() : uint16_t
	-_npredictions : unsigned
	+getnPredictions() : unsigned
	-_lastConnectionTime : unsigned long
	-_period : unsigned long
	+getPeriod() : unsigned long
	+setCity(String city) : void
	+setEEPROMAddress(int add) : void
	+setMqttTopic(String topic) : void
	+setPeriod(unsigned long period) : void
	+setnPredictions(unsigned val) : void
}








.Weather <|- - .WeatherMQTT

show WeatherMQTT members
show <<Serializable>> fields









@enduml

PlantUML version 1.2020.18(Wed Sep 30 16:40:44 BRT 2020)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1252
Language: pt
Country: BR
--></g></svg>